name: Formal Ledger Specs
on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - run: |
        # Create with liberal rights, otherwise cache action will complain
        # about permission errors.
        whoami
        sudo mkdir -p /nix/store
        sudo chmod 1775 /nix/store
        sudo chown root:nixbld /nix/store
        # sudo chmod -R 777 /nix

    - name: Cache nix env
      uses: actions/cache@v3
      with:
        path: |
          /nix/store/**
          /nix/var/nix/*/*
          /nix/var/nix/db/*
          /nix/var/nix/db/*/**
          !/nix/var/nix/daemon-socket/socket
          !/nix/var/nix/userpool/*
          !/nix/var/nix/gc.lock
          !/nix/var/nix/db/big-lock
          !/nix/var/nix/db/reserved
        key: ${{ runner.os }}-nix-store

    - uses: cachix/install-nix-action@v15
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
          substituters = https://cache.nixos.org/

    - run: nix-build -A agdaLedger
    - run: nix-build -A ledger.executableSpec -j1
    - run: nix-build -A ledger.docs -j1
    - run: nix-build -A midnight.executableSpec -j1
    - run: nix-build -A midnight.docs -j1

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
      
#       - name: install nix
#         uses: cachix/install-nix-action@v16
#         with:
#           nix_path: nixpkgs=channel:nixos-unstable
#           extra_nix_config: |
#             trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
#             substituters = https://cache.nixos.org/
#             # save space on disk and in cache
#             auto-optimise-store = true
#             # keep all store paths necessary to build the outputs
#             keep-outputs = true
#             keep-derivations = true

#       - name: cache nix store
#         id: cache-nix-store
#         uses: actions/cache@v3
#         with:
#           key: nix-cache-${{ runner.os }}
#           restore-keys: |
#             nix-cache-
#           path: |
#             nix_store_dir
#             nix_store_db.sqlite

#       - name: restore cached nix store
#         run: |
#             if [ -e nix_store_db.sqlite ]; then
#               sudo systemctl stop nix-daemon
#               # put cached store paths back in their proper locations
#               sudo rm -rf /nix/store /nix/var/nix/db/db.sqlite
#               sudo mv nix_store_dir /nix/store
#               sudo cp nix_store_db.sqlite /nix/var/nix/db/db.sqlite
#               # fix store permissions
#               sudo chmod 1775 /nix/store
#               sudo chown root:nixbld /nix/store
#               sudo chmod 0644 /nix/var/nix/db/db.sqlite
#               sudo chown -R root:root /nix/store /nix/var/nix/db/db.sqlite
#               sudo systemctl start nix-daemon
#             fi

#       - run: nix-build -A agdaLedger
#       - run: nix-build -A ledger.executableSpec -j1
#       - run: nix-build -A ledger.docs -j1
#       - run: nix-build -A midnight.executableSpec -j1
#       - run: nix-build -A midnight.docs -j1
      
#       - name: prepare nix store for caching
#         run: |
#           # delete old stuff not relevant to this build
#           nix-collect-garbage
#           sudo systemctl stop nix-daemon
#           # move store to a place where the cache action can read it
#           sudo mv /nix/store nix_store_dir
#           sudo mv /nix/var/nix/db/db.sqlite nix_store_db.sqlite
          


  # build2:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Cache nix env take N+1
  #       uses: actions/cache@v3
  #       id: nix-cache
  #       with:
  #           path: |
  #               /tmp/nix-cache
  #           key: ${{ runner.os }}-nix-cache
  #     - name: cache hit
  #       if: steps.nix-cache.outputs.cache-hit == 'true'
  #       run: |
  #           sudo chown -R root /tmp/nix-cache
  #           sudo cp -fRT /tmp/nix-cache/ /nix/
  #           # sudo pkill nix-daemon
  #     - uses: actions/checkout@v3
  #     - uses: cachix/install-nix-action@v15
  #       with:
  #         nix_path: nixpkgs=channel:nixos-unstable
  #         extra_nix_config: |
  #           trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
  #           substituters = https://cache.nixos.org/
  #     - run: nix-build -A agdaLedger
  #     - run: nix-build -A ledger.executableSpec -j1 
  #     - run: nix-build -A ledger.docs -j1
  #     - run: nix-build -A midnight.executableSpec -j1
  #     - run: nix-build -A midnight.docs -j1
  #     - run: |
  #         sudo cp -r /nix /tmp/nix-cache
  #         sudo rm -rf /tmp/nix-cache/var/nix/daemon-socket/socket
  #         sudo rm -rf /tmp/nix-cache/var/nix/userpool
  #         sudo rm -rf /tmp/nix-cache/var/nix/gc.lock
  #         sudo rm -rf /tmp/nix-cache/var/nix/db/big-lock
  #         sudo rm -rf /tmp/nix-cache/var/nix/db/reserved
